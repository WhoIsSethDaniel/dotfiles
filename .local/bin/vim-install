#!/bin/bash

set -e

if [[ -z $1 ]]; then
        echo "must provide a version/tag name to download"
        exit 1
fi

max_old_versions=5
pkg=nvim-linux-x86_64.tar.gz

version=$1
if [[ "$version" =~ ^[0-9] ]]; then
        version="v$version"
fi

declare -A versions
while read -r version; do
        versions[$version]=$version
done < <(printf "%s" "$(curl -LSs https://api.github.com/repos/neovim/neovim/releases | jq -r '.[].["tag_name"]')")

if [[ -z "${versions[$version]}" ]]; then
        echo "version/tag does not exist"
        exit 1
fi

rmtmpdir() {
        [[ -n $tmpdir ]] && rm -rf "$tmpdir"
}
tmpdir=$(mktemp -q -d --tmpdir install-nvim.XXXXXXX)
trap rmtmpdir EXIT
cd "$tmpdir" || exit 1

release_url="https://api.github.com/repos/neovim/neovim/releases/tags/$version"
url_sha=()
while read -r u_s; do
        url_sha+=("$u_s")
done < <(printf "%s\n" "$(curl -LSs "$release_url" | jq -r '.assets[] | select(.name == "'"$pkg"'") | .browser_download_url, .digest')")

if [[ ${#url_sha[*]} == 0 ]]; then
        echo "found zero assets"
        exit 1
fi
if [[ ${#url_sha[*]} -gt 2 ]]; then
        echo "too many assets found"
        exit 1
fi

pkg_url=${url_sha[0]}
sha=${url_sha[1]#sha256:}
sha=${sha#null}
sum_local_file="${version}.sha256sum"
sum_store="$XDG_DATA_HOME""/nvim"
if [[ -n $sha ]]; then
        echo "$sha" >"$sum_local_file"
        old_sum_file="${sum_store}/${sum_local_file}"
        if [[ -e $old_sum_file ]]; then
                old=$(cut -d\  -f1 "$old_sum_file")
                new=$(cut -d\  -f1 "$sum_local_file")
                echo "old: ${old}"
                echo "new: ${new}"
                if [[ $new == "$old" ]]; then
                        echo "no update available"
                        exit 0
                else
                        echo "update available"
                fi
        else
                echo "no old sum found"
        fi
else
        echo "asset has no SHA -- skipping SHA check"
fi

echo "download package url: ${pkg_url}"
curl -LSo "$pkg" "$pkg_url"
if [[ ! -s "$pkg" ]]; then
        echo "file is zero length"
        exit 1
fi

mkdir --parents ~/.local/nvim
cd ~/.local/nvim || exit 1
if [[ -e ${version} ]]; then
        while read -r bak; do
                oldest=$((bak + 1))
                if [[ -e "${version}-${bak}" ]]; then
                        rm -rf "${version}-${oldest}"
                        mv "$version-${bak}" "${version}-${oldest}"
                fi
        done < <(seq $((max_old_versions - 1)) -1 1)
        mv "$version" "${version}-1"
fi

tar xzf "$tmpdir"/"$pkg"
mv "nvim-linux-x86_64" "$version"

# only do this if everything else succeeds
if [[ -n "$sha" ]]; then
        cp --force "${tmpdir}/${sum_local_file}" "${sum_store}/${sum_local_file}"
fi
