#!/bin/bash

set -e

max_old_versions=5

declare -A versions
eval versions=\("$VIM_VERSIONS"\)

if [[ -z $1 ]]; then
        echo "must provide an argument"
        echo "possible args: ${!versions[*]}"
        exit 1
fi

if [[ -z ${versions[*]} ]]; then
        echo "cannot determine available nvim versions"
        echo "is VIM_VERSIONS set?"
        exit 1
fi

pkg=nvim-linux64.tar.gz
url="https://github.com/neovim/neovim/releases/download/"

SUM_EXT="sha256sum"
SUM_NAME="${pkg}.${SUM_EXT}"
SUM_LOCAL_NAME=$1"."$SUM_EXT
STORE=$XDG_DATA_HOME"/nvim"
VERSION=${versions[$1]}

if [[ -z ${VERSION} ]]; then
        echo "provided version is invalid"
        exit 1
fi

rmtmpdir() {
        [[ -n $tmpdir ]] && rm -rf "$tmpdir"
}

if [[ $1 == "nightly" ]]; then
        url_version="nightly"
else
        url_version="v${VERSION}"
fi

tmpdir=$(mktemp -q -d --tmpdir install-nvim.XXXXXXX)
trap rmtmpdir EXIT

cd "$tmpdir" || exit 1
curl -LSo "$SUM_LOCAL_NAME" "${url}${url_version}/${SUM_NAME}"

OLD_SUM="${STORE}/${SUM_LOCAL_NAME}"
if [[ -e $OLD_SUM ]]; then
        OLD=$(cut -d\  -f1 "$OLD_SUM")
        NEW=$(cut -d\  -f1 "${tmpdir}/${SUM_LOCAL_NAME}")
        echo "old: ${OLD}"
        echo "new: ${NEW}"
        if [[ $NEW == "$OLD" ]]; then
                echo "no update available"
                exit 0
        else
                echo "update available"
        fi
else
        echo "no old sum found"
fi

curl -LSo nvim.tar.gz "${url}${url_version}/${pkg}"

mkdir --parents ~/.local/nvim
cd ~/.local/nvim || exit 1
if [[ -e ${VERSION} ]]; then
        while read -r bak; do
                oldest=$((bak + 1))
                if [[ -e "${VERSION}-${bak}" ]]; then
                        rm -rf "${VERSION}-${oldest}"
                        mv "$VERSION-${bak}" "${VERSION}-${oldest}"
                fi
        done < <(seq $((max_old_versions - 1)) -1 1)
        mv "$VERSION" "${VERSION}-1"
fi

tar xzf "$tmpdir"/nvim.tar.gz
mv "nvim-linux-x86_64" "$VERSION"

# only do this if everything else succeeds
cp --force "${tmpdir}/${SUM_LOCAL_NAME}" "$STORE/${SUM_LOCAL_NAME}"
